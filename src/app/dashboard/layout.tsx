import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "@/styles/dashboard.css";
import Container from "@/components/Container";
import { ThemeProvider } from "next-themes";
import Sidebar from "@/components/Sidebar";
import { createClient } from "@/utils/supabase/server";
import ProfileModalTrigger from "@/components/ProfileModalTrigger";
import { redirect } from "next/navigation";

const geistSans = Geist({
    variable: "--font-geist-sans",
    subsets: ["latin"],
});

const geistMono = Geist_Mono({
    variable: "--font-geist-mono",
    subsets: ["latin"],
});

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

export default async function RootLayout({
    children,
}: Readonly<{
    children: React.ReactNode;
}>) {
    const supabase = await createClient();
    const {
        data: { user },
    } = await supabase.auth.getUser();
    let needsProfile = false;
    const { data, error } = await supabase
        .from("profiles")
        .select("*")
        .eq("user_id", user?.id)
        .limit(1)
        .single();

    if (error || data.nickname == "NULL") {
        const { data, error: insertError } = await supabase.from("profiles").insert([{ user_id: user?.id }]);
        if (insertError) {
            alert("문제가 발생하였습니다.")
            redirect("/")
        } else {
            needsProfile = true;
        }
    }

    

    return (
        <html lang="ko" suppressHydrationWarning>
            <body
                className={`${geistSans.variable} ${geistMono.variable} antialiased`}
            >
                <ThemeProvider>
                    <ProfileModalTrigger userId={ user?.id } needsProfile={needsProfile}/>
                        <Sidebar />
                        <Container>{children}</Container>
                </ThemeProvider>
            </body>
        </html>
    );
}
